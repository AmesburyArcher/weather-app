{"mappings":"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","sources":["src/js/config.js","src/js/helpers.js","src/js/model.js","src/js/views/View.js","src/js/views/weatherInfoView.js","src/js/views/weatherInfoFiveDayView.js","src/js/views/inputView.js","src/js/views/unitView.js","src/js/views/paginationView.js","src/js/controller.js"],"sourcesContent":["export const API_KEY = 'bae51e29487cd04db12441e4113bb4e1';\nexport const API_URL_TODAY = 'https://api.openweathermap.org/data/2.5/weather?';\nexport const API_URL_5DAY = 'https://api.openweathermap.org/data/2.5/forecast?';\nexport const API_ICON_URL = 'http://openweathermap.org/img/wn/';\nexport const TIMEOUT_SEC = 10;\nexport const KELVIN = 273.15;\nexport const TIMESLOTS_VISIBLE = 4;\n","import { TIMEOUT_SEC } from './config';\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\nexport const getJSON = async function (url) {\n  try {\n    const res = await Promise.race([fetch(url), timeout(TIMEOUT_SEC)]);\n    if (res.status === 404) throw new Error('Location not found');\n\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const convertDate = function (date_string) {\n  let date = new Date(date_string);\n  return `${\n    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()]\n  } ${date.getDate()} ${\n    [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ][date.getMonth()]\n  } ${date_string.slice(11, 16)}`;\n};\n","import { getJSON, convertDate } from './helpers';\nimport {\n  API_URL_TODAY,\n  API_URL_5DAY,\n  API_KEY,\n  API_ICON_URL,\n  TIMESLOTS_VISIBLE,\n} from './config';\n\nexport const state = {\n  weatherSameday: {},\n  weatherFiveDays: {},\n  unit: 'C',\n  page: 1,\n  resPerPage: TIMESLOTS_VISIBLE,\n};\n\nconst createWeatherSameDay = function (data) {\n  const { main } = data;\n  return (state.weatherSameday = {\n    location: data.name,\n    temperature: {\n      feelsLike: main.feels_like,\n      humidity: main.humidity,\n      pressure: main.pressure,\n      temp: main.temp,\n      tempMax: main.temp_max,\n      tempMin: main.temp_min,\n    },\n    weather: {\n      icon: data.weather[0].icon,\n      curWeather: data.weather[0].main,\n      description: data.weather[0].description,\n      windSpeed: data.wind.speed,\n      ...(data.rain && { rainInfo: data.rain['1h'] }),\n      ...(data.snow && { snowInfo: data.snow['1h'] }),\n    },\n  });\n};\n\nconst createWeatherFiveDays = function (data) {\n  return (state.weatherFiveDays = {\n    location: data.city.name,\n    hourlyForecast: data.list.map(entry => {\n      return {\n        date: convertDate(entry.dt_txt),\n        clouds: entry.clouds,\n        feelsLike: entry.main.feels_like,\n        temp: entry.main.temp,\n        pop: entry.pop,\n        ...(entry.rain && { rainInfo: entry.rain['3h'] }),\n        ...(entry.snow && { snowInfo: entry.snow['3h'] }),\n        curWeather: entry.weather[0].main,\n        description: entry.weather[0].description,\n        windSpeed: entry.wind.speed,\n      };\n    }),\n  });\n};\n\nexport const getWeather = async function (city, country = null) {\n  try {\n    //Update state of page\n    state.page = 1;\n    // Get same day weather information\n    const url = `${API_URL_TODAY}q=${city}${\n      country !== null ? `,${country}` : ''\n    }&appid=${API_KEY}`;\n\n    const data = await getJSON(url);\n    state.weatherSameday = createWeatherSameDay(data);\n\n    // Get forecast for 5 days\n    const url_5_days = `${API_URL_5DAY}q=${city}${\n      country !== null ? `,${country}` : ''\n    }&appid=${API_KEY}`;\n\n    const data_5_days = await getJSON(url_5_days);\n    state.weatherFiveDays = createWeatherFiveDays(data_5_days);\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n};\n\nexport const getTimeslotsPerPage = function (page = state.page) {\n  state.page = page;\n\n  const start = (page - 1) * state.resPerPage;\n  const end = page * state.resPerPage;\n  return state.weatherFiveDays.hourlyForecast.slice(start, end);\n};\n\nconst getLongAndLat = function () {\n  return new Promise((resolve, reject) =>\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n  );\n};\n\nexport const getWeatherOnEntry = async function () {\n  try {\n    const position = await getLongAndLat();\n    state.page = 1;\n    const { coords } = position;\n    const { latitude, longitude } = coords;\n    const todayURL = `${API_URL_TODAY}lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;\n    const data = await getJSON(todayURL);\n    state.weatherSameday = createWeatherSameDay(data);\n\n    const fiveDaysURL = `${API_URL_5DAY}lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;\n    const data_5_days = await getJSON(fiveDaysURL);\n    state.weatherFiveDays = createWeatherFiveDays(data_5_days);\n  } catch (err) {\n    throw err;\n  }\n};\n","export default class View {\n  _data;\n  _extraParam;\n\n  render(data, extraParam = null) {\n    if (!data) return this.renderError();\n\n    this.clear();\n    this._data = data;\n    this._extraParam = extraParam;\n    const markup = this._generateMarkup();\n\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  renderSpinner() {\n    const markup = `\n          <div class=\"spinner\">\n          </div> \n    `;\n    this.clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  clear() {\n    this._parentElement.innerHTML = '';\n  }\n\n  renderError(message = this._errorMessage) {\n    const markup = `\n    <div class=\"error\">\n      <p>${message}</p>\n    </div> \n    `;\n    this.clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n}\n","import View from './View';\nimport { API_ICON_URL, KELVIN } from '../config';\n\nclass WeatherInfoViewToday extends View {\n  _parentElement = document.querySelector('.today__information');\n  _errorMessage =\n    'Sorry, an error has occured we were unable to process your request.';\n\n  _generateMarkup() {\n    const time = Date.now();\n    const today = new Date(time);\n    const formatted = today.toDateString();\n    const unit = this._extraParam;\n    return `\n        <div class=\"left__today__information\">\n            <div class=\"today__city\">${this._data.location}</div>\n            <div class=\"today__description\">${\n              this._data.weather.description\n            }</div>\n            <div class=\"today__date\">${formatted}</div>\n            <div class=\"today__temperature\">${(unit === 'C'\n              ? this._data.temperature.temp - KELVIN\n              : (this._data.temperature.temp - KELVIN) * (9 / 5) + 32\n            ).toFixed(1)}º${unit}</div>\n            <div class=\"today__icon\">\n              <img src=\"${API_ICON_URL}${\n      this._data.weather.icon\n    }@2x.png\" alt=\"weather-icon\">\n            </div>\n            </div>\n          <div class=\"right__today__information\">\n          <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-temperature-feelsLike\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"#ffffff\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M10 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5\" />\n              <line x1=\"10\" y1=\"9\" x2=\"14\" y2=\"9\" />\n            </svg>\n            <div class=\"today__feelslike__container\">\n              <div class=\"today__feelslike__label\">Feels like</div>\n              <div class=\"today__feelslike__val\">${(unit === 'C'\n                ? this._data.temperature.feelsLike - KELVIN\n                : (this._data.temperature.feelsLike - KELVIN) * (9 / 5) + 32\n              ).toFixed(1)}º${unit}</div>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-humid\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"#ffffff\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M6.8 11a6 6 0 1 0 10.396 0l-5.197 -8l-5.2 8z\" />\n              <path d=\"M6 14h12\" />\n              <path d=\"M7.305 17.695l3.695 -3.695\" />\n              <path d=\"M10.26 19.74l5.74 -5.74l-5.74 5.74z\" />\n            </svg>\n            <div class=\"today__humidity__container\">\n              <div class=\"today__humidity__label\">Humidity</div>\n              <div class=\"today__humidity__val\">${\n                this._data.temperature.humidity\n              }%</div>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-temperature-min\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"#ffffff\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M8 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5\" />\n              <line x1=\"8\" y1=\"9\" x2=\"12\" y2=\"9\" />\n              <line x1=\"16\" y1=\"9\" x2=\"22\" y2=\"9\" />\n            </svg>\n            <div class=\"today_temp__min__container\">\n              <div class=\"today__temp__min__label\">Minimum Temperature</div>\n              <div class=\"today__temp__min__val\">${(unit === 'C'\n                ? this._data.temperature.tempMin - KELVIN\n                : (this._data.temperature.tempMin - KELVIN) * (9 / 5) + 32\n              ).toFixed(1)}º${unit}</div>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-temperature-max\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"#ffffff\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M8 13.5a4 4 0 1 0 4 0v-8.5a2 2 0 0 0 -4 0v8.5\" />\n              <line x1=\"8\" y1=\"9\" x2=\"12\" y2=\"9\" />\n              <line x1=\"16\" y1=\"9\" x2=\"22\" y2=\"9\" />\n              <line x1=\"19\" y1=\"6\" x2=\"19\" y2=\"12\" />\n            </svg>\n            <div class=\"today_temp__max__container\">\n              <div class=\"today__temp__max__label\">Minimum Temperature</div>\n              <div class=\"today__temp_max__val\">${(unit === 'C'\n                ? this._data.temperature.tempMax - KELVIN\n                : (this._data.temperature.tempMax - KELVIN) * (9 / 5) + 32\n              ).toFixed(1)}º${unit}</div>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              class=\"icon icon-wind\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"#ffffff\"\n              fill=\"none\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M5 8h8.5a2.5 2.5 0 1 0 -2.34 -3.24\" />\n              <path d=\"M3 12h15.5a2.5 2.5 0 1 1 -2.34 3.24\" />\n              <path d=\"M4 16h5.5a2.5 2.5 0 1 1 -2.34 3.24\" />\n            </svg>\n            <div class=\"today__windspeed__container\">\n            <div class=\"today__windspeed__container\">\n              <div class=\"today__windspeed__label\">Wind Speed</div>\n              <div class=\"today__windspeed__val\">${\n                this._data.weather.windSpeed\n              } km/h</div>\n            </div>\n        </div>\n    `;\n  }\n}\n\nexport default new WeatherInfoViewToday();\n","import View from './View';\nimport { KELVIN } from '../config';\n\nclass WeatherInfoFiveDayView extends View {\n  _parentElement = document.querySelector('.other__days__information');\n\n  _svgIcons = {\n    Clouds: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-cloud\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#ffffff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-12\" />\n    </svg>\n    `,\n\n    Snow: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-cloud-snow\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#ffffff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7\" />\n      <path d=\"M11 15v.01m0 3v.01m0 3v.01m4 -4v.01m0 3v.01\" />\n    </svg>\n    `,\n\n    Rain: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-cloud-rain\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#ffffff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7\" />\n      <path d=\"M11 13v2m0 3v2m4 -5v2m0 3v2\" />\n    </svg>\n    `,\n\n    Clear: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-sun\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#ffffff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4\" />\n      <path d=\"M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7\" />\n    </svg>\n    `,\n  };\n\n  _generateMarkup() {\n    const unit = this._extraParam;\n\n    return this._data\n      .map(\n        entry => `\n        <div class=\"other__day__timeslot\">\n            <div class=\"other__day__date\">${entry.date}</div>\n              <div class=\"other__day__curWeather\">${entry.curWeather}${\n          this._svgIcons[entry.curWeather]\n        }</div>\n              <div class=\"other__day__description\">${entry.description}</div>\n              <div class=\"other__day__temperature\">Temperature: ${(unit === 'C'\n                ? entry.temp - KELVIN\n                : (entry.temp - KELVIN) * (9 / 5) + 32\n              ).toFixed(1)}º${unit}</div>\n              <div class=\"other__day__feelsLike\">Feels like: ${(unit === 'C'\n                ? entry.feelsLike - KELVIN\n                : (entry.feelsLike - KELVIN) * (9 / 5) + 32\n              ).toFixed(1)}º${unit}</div>\n        </div>\n    `\n      )\n      .join('');\n  }\n}\n\nexport default new WeatherInfoFiveDayView();\n","import View from './View';\n\nclass InputView extends View {\n  _parentElement = document.querySelector('.location__form');\n\n  getQuery() {\n    const input = this._parentElement.querySelector('.city__form').value;\n    const res = input.split(',').map(val => val.trim());\n    this._parentElement.querySelector('.city__form').value = '';\n    return res;\n  }\n\n  unfocus() {\n    this._parentElement.querySelector('.city__form').blur();\n  }\n\n  addHandler(handler) {\n    this._parentElement.addEventListener('submit', function (e) {\n      e.preventDefault();\n      handler();\n    });\n  }\n}\n\nexport default new InputView();\n","import View from './View';\n\nclass UnitView extends View {\n  _parentElement = document.querySelector('.unit__toggle');\n\n  addHandler(handler) {\n    const that = this;\n    this._parentElement.addEventListener('click', function () {\n      const unit = handler();\n      that._parentElement.textContent = `º${unit}`;\n    });\n  }\n}\n\nexport default new UnitView();\n","import View from './View';\n\nclass PaginationView extends View {\n  _parentElement = document.querySelector('.pagination__container');\n\n  addHandler(handler) {\n    this._parentElement.addEventListener('click', function (e) {\n      const btn = e.target.closest('.pagBTN');\n      if (!btn) return;\n\n      const goToPage = +btn.dataset.goto;\n\n      handler(goToPage);\n    });\n  }\n\n  _generateMarkup() {\n    // _.data is in array form [0]model.weatherFivedays [1]model.page [2]model.resPerPage\n    const curPage = this._data[1];\n    const numPages = Math.ceil(\n      this._data[0].hourlyForecast.length / this._data[2]\n    );\n    if (curPage === 1 && numPages > 1)\n      return `\n      <div class=\"pagination__container>\n          <div class=\"pagination__container\">\n              <button class=\"pagBTN pagBTNRight\" data-goto=\"${curPage + 1}\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"icon icon--arrow-right\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"1.5\"\n                  stroke=\"#ffffff\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                  <line x1=\"13\" y1=\"18\" x2=\"19\" y2=\"12\" />\n                  <line x1=\"13\" y1=\"6\" x2=\"19\" y2=\"12\" />\n                </svg>\n              </button>\n          </div>\n      </div>\n    `;\n    if (curPage === numPages && numPages > 1)\n      return `\n      <div class=\"pagination__container>\n          <div class=\"pagination__container\">\n              <button class=\"pagBTN pagBTNLeft\" data-goto=\"${curPage - 1}\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"icon icon-arrow-left\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"1.5\"\n                  stroke=\"#ffffff\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"18\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"6\" />\n                </svg>\n              </button>\n          </div>\n      </div>\n      `;\n    if (curPage < numPages)\n      return `\n      <div class=\"pagination__container>\n          <div class=\"pagination__container\">\n              <button class=\"pagBTN pagBTNLeft\" data-goto=\"${curPage - 1}\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"icon icon-arrow-left\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"1.5\"\n                  stroke=\"#ffffff\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"18\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"6\" />\n                </svg>\n              </button>\n              <button class=\"pagBTN pagBTNRight\" data-goto=\"${curPage + 1}\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"icon icon--arrow-right\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  stroke-width=\"1.5\"\n                  stroke=\"#ffffff\"\n                  fill=\"none\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                  <line x1=\"13\" y1=\"18\" x2=\"19\" y2=\"12\" />\n                  <line x1=\"13\" y1=\"6\" x2=\"19\" y2=\"12\" />\n                </svg>\n              </button>\n          </div>\n      </div>\n      `;\n    return '';\n  }\n}\n\nexport default new PaginationView();\n","import * as model from './model.js';\nimport weatherInfoView from './views/weatherInfoView.js';\nimport weatherInfoFiveDayView from './views/weatherInfoFiveDayView.js';\nimport inputView from './views/inputView.js';\nimport unitView from './views/unitView.js';\nimport paginationView from './views/paginationView.js';\n\nconst controlOnEntry = async function () {\n  try {\n    weatherInfoView.renderSpinner();\n    await model.getWeatherOnEntry();\n\n    weatherInfoView.render(model.state.weatherSameday, model.state.unit);\n    //Display weather forecast for 5 days\n\n    weatherInfoFiveDayView.render(\n      model.getTimeslotsPerPage(),\n      model.state.unit\n    );\n    // Render page buttons\n    paginationView.render([\n      model.state.weatherFiveDays,\n      model.state.page,\n      model.state.resPerPage,\n    ]);\n  } catch (err) {\n    weatherInfoView.renderError(\n      'Location services turned off, unable to load current location weather. Search for a different location above!'\n    );\n  }\n};\n\nconst controlWeather = async function () {\n  try {\n    // Get search information from input view\n    const query = inputView.getQuery();\n    const city = query[0];\n    const country = query[1];\n    // Clear current contents\n    inputView.unfocus();\n    weatherInfoView.renderSpinner();\n    weatherInfoFiveDayView.clear();\n    paginationView.clear();\n    // Send search information to model to retreive weather info\n    await model.getWeather(city, country);\n\n    // Display weather info for today\n    weatherInfoView.render(model.state.weatherSameday, model.state.unit);\n    //Display weather forecast for 5 days\n\n    weatherInfoFiveDayView.render(\n      model.getTimeslotsPerPage(),\n      model.state.unit\n    );\n    // Render page buttons\n    paginationView.render([\n      model.state.weatherFiveDays,\n      model.state.page,\n      model.state.resPerPage,\n    ]);\n  } catch (err) {\n    weatherInfoView.renderError(err);\n  }\n};\n\nconst controlUnit = function () {\n  const currentUnit = model.state.unit;\n  currentUnit === 'C' ? (model.state.unit = 'F') : (model.state.unit = 'C');\n  //Update weather today\n  weatherInfoView.render(model.state.weatherSameday, model.state.unit);\n\n  //Update 5 day weather\n  weatherInfoFiveDayView.render(model.getTimeslotsPerPage(), model.state.unit);\n\n  return model.state.unit;\n};\n\nconst controlPagination = function (page) {\n  // Render new results\n  weatherInfoFiveDayView.render(\n    model.getTimeslotsPerPage(page),\n    model.state.unit\n  );\n  // Need access to multiple model states\n  paginationView.render([\n    model.state.weatherFiveDays,\n    model.state.page,\n    model.state.resPerPage,\n  ]);\n};\n\nconst init = function () {\n  controlOnEntry();\n  inputView.addHandler(controlWeather);\n  unitView.addHandler(controlUnit);\n  paginationView.addHandler(controlPagination);\n};\n\ninit();\n"],"names":["$ba30e20475feac5a$export$a9861bd62f48e142","$ba30e20475feac5a$export$d888cd8135cd406a","$ba30e20475feac5a$export$519a38eae0b0f750","$ba30e20475feac5a$export$42ff68c564759fa1","$bd02c871d9c5ba8e$export$d047a7c56db64af4","async","url","res","Promise","race","fetch","s","_","reject","setTimeout","Error","status","json","err","$bd02c871d9c5ba8e$export$3c2ab2c4f3202ceb","date_string","date","Date","getDay","getDate","getMonth","slice","$0f1d4402dffacf5b$export$ca000e230c0caa3e","weatherSameday","weatherFiveDays","unit","page","resPerPage","$0f1d4402dffacf5b$var$createWeatherSameDay","data","main","location","name","temperature","feelsLike","feels_like","humidity","pressure","temp","tempMax","temp_max","tempMin","temp_min","weather","icon","curWeather","description","windSpeed","wind","speed","rain","rainInfo","snow","snowInfo","$0f1d4402dffacf5b$var$createWeatherFiveDays","city","hourlyForecast","list","map","entry","dt_txt","clouds","pop","$0f1d4402dffacf5b$export$86f9e02236238107","start","end","$0f1d4402dffacf5b$export$4d2e19defcda0bd2","position","resolve","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","todayURL","fiveDaysURL","data_5_days","$3a07c34e115c11c9$export$2e2bcd8739ae039","_data","_extraParam","render","extraParam","this","renderError","clear","markup","_generateMarkup","_parentElement","insertAdjacentHTML","renderSpinner","innerHTML","message","_errorMessage","$8ae655c6989eefe1$export$2e2bcd8739ae039","document","querySelector","time","now","formatted","toDateString","toFixed","$af3873e101daafdb$export$2e2bcd8739ae039","_svgIcons","Clouds","Snow","Rain","Clear","join","$54207738217c2206$export$2e2bcd8739ae039","getQuery","value","split","val","trim","unfocus","blur","addHandler","handler","addEventListener","e","preventDefault","$91b044df609f7d5e$export$2e2bcd8739ae039","that","textContent","$cfa940594ee109f7$export$2e2bcd8739ae039","btn","target","closest","goToPage","dataset","goto","curPage","numPages","Math","ceil","length","$f50bd1f2915ed0f2$var$controlWeather","query","country","url_5_days","console","log","$0f1d4402dffacf5b$export$ce1081f0c9899666","$f50bd1f2915ed0f2$var$controlUnit","currentUnit","$f50bd1f2915ed0f2$var$controlPagination","$f50bd1f2915ed0f2$var$controlOnEntry"],"version":3,"file":"index.a4d5319b.js.map"}